[mcu pitb]
##  You need to select 'Communication interface' to USB in 'make menuconfig'
##  when you compile Klipper
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#canbus_uuid=
canbus_uuid: fdda32d2c752
## Uncomment below if you're using the Raspberry uart0 to communicate with Spider
#restart_method: command

[board_pins pitb]
mcu: pitb
aliases:
    ## Board enable LED
    LED_RUN=gpio15,

    ## Can pins. STANDBY can be pulled low if you're running USB to disable the transceiver
    ## https://www.nxp.com/docs/en/data-sheet/TJA1040.pdf page 4
    CAN_TX=gpio13, CAN_RX=gpio14, CAN_STANDBY=gpio25,

    ## SPI for motors. spi_bus: spi0a
    MISO=gpio0, MOSI=gpio3, SCLK=gpio2,

    ## Stepper pins
    MOT1_EN=gpio5, MOT1_CS=gpio6,  MOT1_DIR=gpio7,  MOT1_STEP=gpio8,
    MOT2_EN=gpio9, MOT2_CS=gpio10, MOT2_DIR=gpio11, MOT2_STEP=gpio12,

    ## Endstop pins, or DIAG with jumpers
    ENDSTOP_X=gpio23, ENDSTOP_Y=gpio24,

    ## I2C bus: i2c0e
    SCL=gpio17, SDA=gpio16,

    ## Other IO
    FAN0=gpio20, FAN1=gpio21, THERM0=gpio26,
    RGB=gpio29,

[stepper_x]
step_pin = pitb:MOT1_STEP
dir_pin = !pitb:MOT1_DIR
enable_pin = !pitb:MOT1_EN
endstop_pin = tmc5160_stepper_x:virtual_endstop
## These values are for a Voron 2.4, you need to use the correct values for your printer
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 80
homing_positive_dir = true
homing_retract_dist = 0

[tmc5160 stepper_x]
spi_bus = spi0a
cs_pin = pitb:MOT1_CS
diag0_pin = ^!pitb:ENDSTOP_X
run_current = 1.1
hold_current = 1.1
sense_resistor = 0.075
driver_sgt = 1
driver_TBL: 1
driver_TOFF: 3
driver_HSTRT: 7
driver_HEND: 6

[stepper_y]
step_pin = pitb:MOT2_STEP
dir_pin = !pitb:MOT2_DIR
enable_pin = !pitb:MOT2_EN
endstop_pin = tmc5160_stepper_y:virtual_endstop
## These values are for a Voron 2.4, you need to use the correct values for your printer
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
position_min = -10
position_endstop = 350
position_max = 350
homing_speed = 80
homing_positive_dir = true
homing_retract_dist = 0

[tmc5160 stepper_y]
spi_bus = spi0a
cs_pin = pitb:MOT2_CS
diag0_pin = ^!pitb:ENDSTOP_Y
run_current = 1.1
hold_current = 1.1
sense_resistor = 0.075
driver_sgt = 1
driver_TBL: 1
driver_TOFF: 3
driver_HSTRT: 7
driver_HEND: 6

# You will need to configure a neopixel (or other addressable led, such as dotstar). See
# https://www.klipper3d.org/Config_Reference.html#neopixel for configuration details.
# And you can get sb led MACRO here: https://github.com/PrinterConfigs/DoomConfig/blob/master/stealthburner.cfg
# Or here https://github.com/sttts/voron-klipper-config/blob/master/stealthburner_leds.cfg
[neopixel leds]
pin: pitb:gpio29
chain_count: 3
color_order: GRBW
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5
initial_WHITE: 0.5

#[fan_generic fg1]
#pin:pitb:gpio20

#[fan_generic fg2]
#pin: pitb:gpio21

#[temperature_sensor chamber]
#sensor_type: Generic 3950
#sensor_pin: pitb:gpio26
#min_temp: 0
#max_temp: 100
#gcode_id: C

[output_pin activity_led]
pin: pitb:gpio15

[temperature_sensor pitb_mcu]
sensor_type = temperature_mcu
sensor_mcu = pitb